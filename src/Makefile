VALID_TOOLCHAINS := pnacl

include $(NACL_SDK_ROOT)/tools/common.mk

# What's the right way to determine this path?
FREETYPE_CONFIG := $(NACL_SDK_ROOT)/toolchain/$(shell $(NACL_SDK_ROOT)/tools/getos.py)_pnacl/le32-nacl/usr/bin/freetype-config
FREETYPE_INC := $(shell $(FREETYPE_CONFIG) --cflags)

TARGET = xsystem35
LIBS = vorbisfile vorbis ogg SDL freetype png bz2 z ppapi_simple_cpp ppapi_gles2 ppapi_cpp ppapi nacl_io

CFLAGS = -I.. -I. $(FREETYPE_INC) -Wno-pointer-sign -Wno-invalid-source-encoding

SRC_SYS35CMD := cmdb.c cmdc.c cmdd.c cmde.c cmdf.c cmdg.c cmdh.c cmdi.c cmdj.c cmdk.c cmdl.c cmdm.c cmdn.c cmdo.c cmdp.c cmdq.c cmds.c cmdt.c cmdu.c cmdv.c cmdw.c cmdy.c cmdz.c cmd2F.c cmd2F60.c
SRC_CG    := pms.c vsp.c bmp.c qnt.c
SRC_MUS   := music.c music_client.c music_server.c music_cdrom.c music_midi.c music_pcm.c music_fader.c wavfile.c wavmix.c audio.c midi.c cdrom.c sndcnv.c musstream.c pcmlib.c music_bgm.c musstream_wav.c musstream_ogg.c musstream_wav_ima.c
SRC_MISC  := LittleEndian.c counter.c imput.c profile.c mt19937-1.c joystick_dmy.c eucsjis.c filecheck.c glib.c # tempname.c
SRC_SCO   := cali.c scenario.c variable.c cmd_check.c hankana2sjis.c nact.c selection.c message.c savedata.c hankaku.c s39ain.c s39init.c
SRC_GRAPH := ags.c font.c flood.c cg.c ecopy.c antialiase.c alpha_plane.c cursor.c
SRC_NET := network.c
SRC_DLL := 

SRC_IMAGE = image.c

SRC_AUDIO = audio_nacl.cc
SRC_CDROM = cdrom.nacl.cc
SRC_MIDI = 
SRC_GRAPHDEV = sdl_video.c sdl_mode.c sdl_draw.c sdl_event.c sdl_image.c sdl_cursor.c
SRC_FONT = font_freetype2.c cp932tojis0213.c
SRC_ABLEND = 
#SRC_MENU := menu.c menu_callback.c menu_gui.c
SRC_MENU := menu_null.c

SOURCES = modulemain.cc \
	naclmsg.cc \
	xsystem35.c \
	dri.c \
	ald_manager.c \
	cache.c \
	$(SRC_SYS35CMD) \
	$(SRC_CG) \
	$(SRC_SCO) \
	$(SRC_MUS) \
	$(SRC_GRAPH) \
	$(SRC_MISC) \
	$(SRC_NET) \
	$(SRC_DLL) \
	$(SRC_IMAGE) \
	$(SRC_AUDIO) \
	$(SRC_CDROM) \
	$(SRC_MIDI) \
	$(SRC_GRAPHDEV) \
	$(SRC_FONT) \
	$(SRC_ABLEND) \
	$(SRC_MENU)


# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

ifeq ($(CONFIG),Release)
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))
